//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DbContext : DbContext
    {
        public DbContext()
            : base("name=DbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Branch> Branches { get; set; }
        public DbSet<Course> Courses { get; set; }
        public DbSet<CourseManual> CourseManuals { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<Intake> Intakes { get; set; }
        public DbSet<PlatfromIntake> PlatfromIntakes { get; set; }
        public DbSet<ProgramIntake> ProgramIntakes { get; set; }
        public DbSet<program> programs { get; set; }
        public DbSet<StudentBasicData> StudentBasicDatas { get; set; }
        public DbSet<subTrack> subTracks { get; set; }
        public DbSet<TrackManager> TrackManagers { get; set; }
        public DbSet<TrackManual> TrackManuals { get; set; }
        public DbSet<TrackSupervisor> TrackSupervisors { get; set; }
        public DbSet<TrainBranch> TrainBranches { get; set; }
        public DbSet<Exam> Exams { get; set; }
        public DbSet<Notification> Notifications { get; set; }
        public DbSet<QuestionAnswer> QuestionAnswers { get; set; }
        public DbSet<Question> Questions { get; set; }
        public DbSet<StudentAnswerQuestionInExam> StudentAnswerQuestionInExams { get; set; }
        public DbSet<TopicsInCourse> TopicsInCourses { get; set; }
        public DbSet<DepartmentsExam> DepartmentsExams { get; set; }
        public DbSet<ExternalInstructorAuthorization> ExternalInstructorAuthorizations { get; set; }
        public DbSet<NewDateExamForPermittedStudent> NewDateExamForPermittedStudents { get; set; }
        public DbSet<QuestionsInExam> QuestionsInExams { get; set; }
        public DbSet<StudentMultiAnswersQuestion> StudentMultiAnswersQuestions { get; set; }
        public DbSet<StudentPermissionInExam> StudentPermissionInExams { get; set; }
    
        public virtual ObjectResult<GetEmployeeByBranch_Result> GetEmployeeByBranch(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeByBranch_Result>("GetEmployeeByBranch", branchIDParameter);
        }
    }
}
