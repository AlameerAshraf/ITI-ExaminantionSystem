//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataBaseCTX : DbContext
    {
        public DataBaseCTX()
            : base("name=DataBaseCTX")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<CourseEvaluationItem> CourseEvaluationItems { get; set; }
        public virtual DbSet<CourseInstanceDetail> CourseInstanceDetails { get; set; }
        public virtual DbSet<CourseManual> CourseManuals { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<EvaluationCriteria> EvaluationCriterias { get; set; }
        public virtual DbSet<Intake> Intakes { get; set; }
        public virtual DbSet<Platform> Platforms { get; set; }
        public virtual DbSet<PlatformDepartment> PlatformDepartments { get; set; }
        public virtual DbSet<PlatfromIntake> PlatfromIntakes { get; set; }
        public virtual DbSet<ProgramIntake> ProgramIntakes { get; set; }
        public virtual DbSet<program> programs { get; set; }
        public virtual DbSet<Student_Enrollment> Student_Enrollments { get; set; }
        public virtual DbSet<StudentBasicData> StudentBasicDatas { get; set; }
        public virtual DbSet<subTrack> subTracks { get; set; }
        public virtual DbSet<TrackManager> TrackManagers { get; set; }
        public virtual DbSet<TrackManual> TrackManuals { get; set; }
        public virtual DbSet<TrackSupervisor> TrackSupervisors { get; set; }
        public virtual DbSet<DepartmentsExam> DepartmentsExams { get; set; }
        public virtual DbSet<EmployeeNotification> EmployeeNotifications { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<ExternalInstructorAuthorization> ExternalInstructorAuthorizations { get; set; }
        public virtual DbSet<InstructorNotification> InstructorNotifications { get; set; }
        public virtual DbSet<InstructorsConnectionId> InstructorsConnectionIds { get; set; }
        public virtual DbSet<NewDateExamForPermittedStudent> NewDateExamForPermittedStudents { get; set; }
        public virtual DbSet<Notification> Notifications { get; set; }
        public virtual DbSet<QuestionAnswer> QuestionAnswers { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<QuestionsInExam> QuestionsInExams { get; set; }
        public virtual DbSet<StudentAnswerQuestionInExam> StudentAnswerQuestionInExams { get; set; }
        public virtual DbSet<StudentMultiAnswersQuestion> StudentMultiAnswersQuestions { get; set; }
        public virtual DbSet<StudentNotification> StudentNotifications { get; set; }
        public virtual DbSet<StudentPermissionInExam> StudentPermissionInExams { get; set; }
        public virtual DbSet<StudentsConnectionId> StudentsConnectionIds { get; set; }
        public virtual DbSet<SupervisiorNotification> SupervisiorNotifications { get; set; }
        public virtual DbSet<SupervisiorsConnectionId> SupervisiorsConnectionIds { get; set; }
        public virtual DbSet<TopicsInCourse> TopicsInCourses { get; set; }
        public virtual DbSet<evaluationiteminstructor> evaluationiteminstructors { get; set; }
        public virtual DbSet<CoursesDataView> CoursesDataViews { get; set; }
        public virtual DbSet<Employee_metadata> Employee_metadata { get; set; }
    
        public virtual ObjectResult<GetAllEmployee_Result> GetAllEmployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmployee_Result>("GetAllEmployee");
        }
    
        public virtual ObjectResult<GetAllInstructor_Result> GetAllInstructor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllInstructor_Result>("GetAllInstructor");
        }
    
        public virtual ObjectResult<GetAllIntake_Result> GetAllIntake(Nullable<int> subTrackID)
        {
            var subTrackIDParameter = subTrackID.HasValue ?
                new ObjectParameter("SubTrackID", subTrackID) :
                new ObjectParameter("SubTrackID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllIntake_Result>("GetAllIntake", subTrackIDParameter);
        }
    
        public virtual ObjectResult<GetAllsubTrack_Result> GetAllsubTrack()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllsubTrack_Result>("GetAllsubTrack");
        }
    
        public virtual ObjectResult<GetEmployeeByBranch_Result> GetEmployeeByBranch(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeByBranch_Result>("GetEmployeeByBranch", branchIDParameter);
        }
    }
}
