//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ApplicationContext : DbContext
    {
        public ApplicationContext()
            : base("name=ApplicationContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Branch> Branches { get; set; }
        public DbSet<Course> Courses { get; set; }
        public DbSet<CourseManual> CourseManuals { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<InstructorCourse> InstructorCourses { get; set; }
        public DbSet<InstructorType> InstructorTypes { get; set; }
        public DbSet<Intake> Intakes { get; set; }
        public DbSet<PlatfromIntake> PlatfromIntakes { get; set; }
        public DbSet<ProgramIntake> ProgramIntakes { get; set; }
        public DbSet<program> programs { get; set; }
        public DbSet<StudentBasicData> StudentBasicDatas { get; set; }
        public DbSet<subTrack> subTracks { get; set; }
        public DbSet<TrackManager> TrackManagers { get; set; }
        public DbSet<TrackManual> TrackManuals { get; set; }
        public DbSet<TrackSupervisor> TrackSupervisors { get; set; }
        public DbSet<TrainBranch> TrainBranches { get; set; }
        public DbSet<UserDevice> UserDevices { get; set; }
        public DbSet<DepartmentsExam> DepartmentsExams { get; set; }
        public DbSet<Exam> Exams { get; set; }
        public DbSet<ExternalInstructorAuthorization> ExternalInstructorAuthorizations { get; set; }
        public DbSet<InstructorsConnectionId> InstructorsConnectionIds { get; set; }
        public DbSet<NewDateExamForPermittedStudent> NewDateExamForPermittedStudents { get; set; }
        public DbSet<Notification> Notifications { get; set; }
        public DbSet<QuestionAnswer> QuestionAnswers { get; set; }
        public DbSet<Question> Questions { get; set; }
        public DbSet<QuestionsInExam> QuestionsInExams { get; set; }
        public DbSet<StudentAnswerQuestionInExam> StudentAnswerQuestionInExams { get; set; }
        public DbSet<StudentMultiAnswersQuestion> StudentMultiAnswersQuestions { get; set; }
        public DbSet<StudentPermissionInExam> StudentPermissionInExams { get; set; }
        public DbSet<StudentsConnectionId> StudentsConnectionIds { get; set; }
        public DbSet<SupervisiorsConnectionId> SupervisiorsConnectionIds { get; set; }
        public DbSet<TopicsInCourse> TopicsInCourses { get; set; }
    
        public virtual ObjectResult<GetEmployeeByAllBranch_Result> GetEmployeeByAllBranch(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeByAllBranch_Result>("GetEmployeeByAllBranch", branchIDParameter);
        }
    
        public virtual ObjectResult<GetEmployeeByBranch_Result> GetEmployeeByBranch(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeByBranch_Result>("GetEmployeeByBranch", branchIDParameter);
        }
    
        public virtual ObjectResult<GetEmployeeByDepartmentID_Result> GetEmployeeByDepartmentID(Nullable<int> departmentID)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeByDepartmentID_Result>("GetEmployeeByDepartmentID", departmentIDParameter);
        }
    
        public virtual ObjectResult<GetEmployeeByName_Result> GetEmployeeByName(string instructorname)
        {
            var instructornameParameter = instructorname != null ?
                new ObjectParameter("Instructorname", instructorname) :
                new ObjectParameter("Instructorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeByName_Result>("GetEmployeeByName", instructornameParameter);
        }
    
        public virtual ObjectResult<GetEmployeeByPlatform_Result> GetEmployeeByPlatform(Nullable<int> platformid)
        {
            var platformidParameter = platformid.HasValue ?
                new ObjectParameter("platformid", platformid) :
                new ObjectParameter("platformid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeByPlatform_Result>("GetEmployeeByPlatform", platformidParameter);
        }
    
        public virtual ObjectResult<GetEmployeeName_Result> GetEmployeeName(string employeeName, Nullable<int> branchID, Nullable<int> platformID, Nullable<int> roleID, Nullable<int> typeID, string arabicName, Nullable<int> certificateID, string firstNameEn, string secondNameEn, Nullable<int> orgBranch, string thirdNameEn, string fourthNameEn, string firstNameAr, string secondNameAr, string thirdNameAr, string fourthNameAr, Nullable<int> intakeID)
        {
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var certificateIDParameter = certificateID.HasValue ?
                new ObjectParameter("CertificateID", certificateID) :
                new ObjectParameter("CertificateID", typeof(int));
    
            var firstNameEnParameter = firstNameEn != null ?
                new ObjectParameter("FirstNameEn", firstNameEn) :
                new ObjectParameter("FirstNameEn", typeof(string));
    
            var secondNameEnParameter = secondNameEn != null ?
                new ObjectParameter("SecondNameEn", secondNameEn) :
                new ObjectParameter("SecondNameEn", typeof(string));
    
            var orgBranchParameter = orgBranch.HasValue ?
                new ObjectParameter("OrgBranch", orgBranch) :
                new ObjectParameter("OrgBranch", typeof(int));
    
            var thirdNameEnParameter = thirdNameEn != null ?
                new ObjectParameter("ThirdNameEn", thirdNameEn) :
                new ObjectParameter("ThirdNameEn", typeof(string));
    
            var fourthNameEnParameter = fourthNameEn != null ?
                new ObjectParameter("FourthNameEn", fourthNameEn) :
                new ObjectParameter("FourthNameEn", typeof(string));
    
            var firstNameArParameter = firstNameAr != null ?
                new ObjectParameter("FirstNameAr", firstNameAr) :
                new ObjectParameter("FirstNameAr", typeof(string));
    
            var secondNameArParameter = secondNameAr != null ?
                new ObjectParameter("SecondNameAr", secondNameAr) :
                new ObjectParameter("SecondNameAr", typeof(string));
    
            var thirdNameArParameter = thirdNameAr != null ?
                new ObjectParameter("ThirdNameAr", thirdNameAr) :
                new ObjectParameter("ThirdNameAr", typeof(string));
    
            var fourthNameArParameter = fourthNameAr != null ?
                new ObjectParameter("FourthNameAr", fourthNameAr) :
                new ObjectParameter("FourthNameAr", typeof(string));
    
            var intakeIDParameter = intakeID.HasValue ?
                new ObjectParameter("IntakeID", intakeID) :
                new ObjectParameter("IntakeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeName_Result>("GetEmployeeName", employeeNameParameter, branchIDParameter, platformIDParameter, roleIDParameter, typeIDParameter, arabicNameParameter, certificateIDParameter, firstNameEnParameter, secondNameEnParameter, orgBranchParameter, thirdNameEnParameter, fourthNameEnParameter, firstNameArParameter, secondNameArParameter, thirdNameArParameter, fourthNameArParameter, intakeIDParameter);
        }
    
        public virtual ObjectResult<GetInstructorData2_Result> GetInstructorData2(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInstructorData2_Result>("GetInstructorData2", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetStudentDetails_Result> GetStudentDetails(Nullable<int> studentID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentDetails_Result>("GetStudentDetails", studentIDParameter);
        }
    
        public virtual ObjectResult<string> GetStudentGrade(Nullable<int> studentID, Nullable<int> evalID, Nullable<int> courseinstanceid)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            var evalIDParameter = evalID.HasValue ?
                new ObjectParameter("EvalID", evalID) :
                new ObjectParameter("EvalID", typeof(int));
    
            var courseinstanceidParameter = courseinstanceid.HasValue ?
                new ObjectParameter("Courseinstanceid", courseinstanceid) :
                new ObjectParameter("Courseinstanceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetStudentGrade", studentIDParameter, evalIDParameter, courseinstanceidParameter);
        }
    
        public virtual ObjectResult<string> GetStudentGradeProject(Nullable<int> studentID, Nullable<int> evalID, Nullable<int> projectID)
        {
            var studentIDParameter = studentID.HasValue ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(int));
    
            var evalIDParameter = evalID.HasValue ?
                new ObjectParameter("EvalID", evalID) :
                new ObjectParameter("EvalID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetStudentGradeProject", studentIDParameter, evalIDParameter, projectIDParameter);
        }
    
        public virtual ObjectResult<GetSubtrackData_Result> GetSubtrackData(Nullable<int> platformIntakeID)
        {
            var platformIntakeIDParameter = platformIntakeID.HasValue ?
                new ObjectParameter("PlatformIntakeID", platformIntakeID) :
                new ObjectParameter("PlatformIntakeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubtrackData_Result>("GetSubtrackData", platformIntakeIDParameter);
        }
    
        public virtual ObjectResult<GetTrackBasicInfo_Result> GetTrackBasicInfo(Nullable<int> platformIntakeID)
        {
            var platformIntakeIDParameter = platformIntakeID.HasValue ?
                new ObjectParameter("PlatformIntakeID", platformIntakeID) :
                new ObjectParameter("PlatformIntakeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTrackBasicInfo_Result>("GetTrackBasicInfo", platformIntakeIDParameter);
        }
    
        public virtual ObjectResult<GetTrackByBranch_Result> GetTrackByBranch(Nullable<int> branchID)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTrackByBranch_Result>("GetTrackByBranch", branchIDParameter);
        }
    
        public virtual ObjectResult<GetTrackManual_Result> GetTrackManual(Nullable<int> platformIntakeID)
        {
            var platformIntakeIDParameter = platformIntakeID.HasValue ?
                new ObjectParameter("PlatformIntakeID", platformIntakeID) :
                new ObjectParameter("PlatformIntakeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTrackManual_Result>("GetTrackManual", platformIntakeIDParameter);
        }
    
        public virtual ObjectResult<GetUserGroup_Result> GetUserGroup(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserGroup_Result>("GetUserGroup", empidParameter);
        }
    
        public virtual int PlatformIU(Nullable<int> platformID, string platformName, string nameAr, Nullable<int> department_ID, Nullable<int> higherdept, Nullable<bool> iSMonthPlat, Nullable<int> ownerEmployeeID)
        {
            var platformIDParameter = platformID.HasValue ?
                new ObjectParameter("PlatformID", platformID) :
                new ObjectParameter("PlatformID", typeof(int));
    
            var platformNameParameter = platformName != null ?
                new ObjectParameter("PlatformName", platformName) :
                new ObjectParameter("PlatformName", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("NameAr", nameAr) :
                new ObjectParameter("NameAr", typeof(string));
    
            var department_IDParameter = department_ID.HasValue ?
                new ObjectParameter("Department_ID", department_ID) :
                new ObjectParameter("Department_ID", typeof(int));
    
            var higherdeptParameter = higherdept.HasValue ?
                new ObjectParameter("higherdept", higherdept) :
                new ObjectParameter("higherdept", typeof(int));
    
            var iSMonthPlatParameter = iSMonthPlat.HasValue ?
                new ObjectParameter("ISMonthPlat", iSMonthPlat) :
                new ObjectParameter("ISMonthPlat", typeof(bool));
    
            var ownerEmployeeIDParameter = ownerEmployeeID.HasValue ?
                new ObjectParameter("OwnerEmployeeID", ownerEmployeeID) :
                new ObjectParameter("OwnerEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlatformIU", platformIDParameter, platformNameParameter, nameArParameter, department_IDParameter, higherdeptParameter, iSMonthPlatParameter, ownerEmployeeIDParameter);
        }
    
        public virtual int subTrackD(Nullable<int> subtrackID)
        {
            var subtrackIDParameter = subtrackID.HasValue ?
                new ObjectParameter("subtrackID", subtrackID) :
                new ObjectParameter("subtrackID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("subTrackD", subtrackIDParameter);
        }
    
        public virtual int UpdateStudent(ObjectParameter studentID, string englishName, string arabicName, string applicationNo, Nullable<int> fK_UniversityFaculty_SpecializationId, Nullable<int> graduationGradeID, string graduationYear, string phone, string mobile, string mail, Nullable<int> subtrackID, string username, string password)
        {
            var englishNameParameter = englishName != null ?
                new ObjectParameter("EnglishName", englishName) :
                new ObjectParameter("EnglishName", typeof(string));
    
            var arabicNameParameter = arabicName != null ?
                new ObjectParameter("ArabicName", arabicName) :
                new ObjectParameter("ArabicName", typeof(string));
    
            var applicationNoParameter = applicationNo != null ?
                new ObjectParameter("ApplicationNo", applicationNo) :
                new ObjectParameter("ApplicationNo", typeof(string));
    
            var fK_UniversityFaculty_SpecializationIdParameter = fK_UniversityFaculty_SpecializationId.HasValue ?
                new ObjectParameter("FK_UniversityFaculty_SpecializationId", fK_UniversityFaculty_SpecializationId) :
                new ObjectParameter("FK_UniversityFaculty_SpecializationId", typeof(int));
    
            var graduationGradeIDParameter = graduationGradeID.HasValue ?
                new ObjectParameter("GraduationGradeID", graduationGradeID) :
                new ObjectParameter("GraduationGradeID", typeof(int));
    
            var graduationYearParameter = graduationYear != null ?
                new ObjectParameter("GraduationYear", graduationYear) :
                new ObjectParameter("GraduationYear", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var subtrackIDParameter = subtrackID.HasValue ?
                new ObjectParameter("SubtrackID", subtrackID) :
                new ObjectParameter("SubtrackID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudent", studentID, englishNameParameter, arabicNameParameter, applicationNoParameter, fK_UniversityFaculty_SpecializationIdParameter, graduationGradeIDParameter, graduationYearParameter, phoneParameter, mobileParameter, mailParameter, subtrackIDParameter, usernameParameter, passwordParameter);
        }
    }
}
